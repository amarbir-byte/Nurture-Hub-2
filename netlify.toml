[build]
  publish = "dist"
  command = "npm run build"

[build.environment]
  NODE_VERSION = "18"

# SPA routing - redirect all non-file requests to index.html
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# API routing for serverless functions
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://api.maptiler.com; style-src 'self' 'unsafe-inline' https://api.maptiler.com; img-src 'self' data: https: blob:; font-src 'self' data:; connect-src 'self' https://*.supabase.co https://api.stripe.com https://api.maptiler.com https://www.google-analytics.com; media-src 'self'; object-src 'none'; frame-src 'self' https://checkout.stripe.com;"

# Cache static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Fix MIME type for JavaScript modules
[[headers]]
  for = "/assets/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

[[headers]]
  for = "*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

[[headers]]
  for = "/assets/*.mjs"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"

# PWA files
[[headers]]
  for = "/manifest.webmanifest"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Functions configuration
[functions]
  directory = "api"
  node_bundler = "esbuild"

# Build plugins for optimization
# [[plugins]]
#   package = "@netlify/plugin-lighthouse"

# Environment variables that are safe to expose
[context.production.environment]
  NODE_ENV = "production"

[context.deploy-preview.environment]
  NODE_ENV = "development"

[context.branch-deploy.environment]
  NODE_ENV = "development"